--DROP TABLE MEMBER;
--DROP TABLE BOOK;
--DROP TABLE NOTICE;
--DROP TABLE REVIEW;
--DROP TABLE CHATTROOM;
--DROP TABLE PAY;
--DROP TABLE PRODUCT;
--DROP TABLE QNA;
--DROP TABLE MAP;
--DROP TABLE SNS;
--DROP TABLE CHAT;
--DROP TABLE MEMBER_ROOM;
--DROP TABLE PRODUCTFILE;
--DROP SEQUENCE SEQ_PRO_NUM;


CREATE TABLE MEMBER (
	MEM_ID	VARCHAR2(20)		NOT NULL,
	MEM_PASSWD	VARCHAR2(20)		NULL,
	MEM_NAME	VARCHAR2(10)		NULL,
	MEM_PHONE	VARCHAR2(20)		NULL,
	MEM_EMAIL	VARCHAR2(20)		NULL,
	MEM_QUIT	NUMBER	DEFAULT 0	NULL,
	MEM_AUTHORITY	NUMBER		NULL
);
ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	MEM_ID
);
COMMENT ON COLUMN MEMBER.MEM_ID  IS '아이디';
COMMENT ON COLUMN MEMBER.MEM_PASSWD  IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEM_NAME  IS '이름';
COMMENT ON COLUMN MEMBER.MEM_PHONE  IS '전화번호';
COMMENT ON COLUMN MEMBER.MEM_EMAIL  IS '이메일';
COMMENT ON COLUMN MEMBER.MEM_QUIT  IS '탈퇴구분';
COMMENT ON COLUMN MEMBER.MEM_AUTHORITY  IS '계정권한';

INSERT INTO MEMBER VALUES(
 'test', 'test', '테스트', '010-0000-0000', 'test@test.com', DEFAULT, 3
);
INSERT INTO MEMBER VALUES(
 '2test', '2test', '2테스트', '010-2222-0000', '2test@test.com', DEFAULT, 2
);
INSERT INTO MEMBER VALUES(
 '3test', '3test', '3테스트', '010-3333-0000', 'test@test.com', DEFAULT, 1
);
UPDATE MEMBER SET MEM_PASSWD = 'testtest', MEM_EMAIL = 'test@naver.com' WHERE MEM_ID = 'test';
DELETE FROM MEMBER WHERE MEM_ID = 'test';

SELECT * FROM MEMBER;
DESC MEMBER;

-- PRO_NUM 시퀀스
CREATE SEQUENCE SEQ_PRO_NUM;

CREATE TABLE MAP (
	PRO_NUM	NUMBER		NOT NULL,
	PRO_NAME	VARCHAR2(60)		NOT NULL,
	PRO_ADDRESS	VARCHAR2(100)		NULL,
	PRO_PHONE	VARCHAR2(20)		NULL
);
ALTER TABLE MAP ADD CONSTRAINT PK_MAP PRIMARY KEY (
	PRO_NUM
);
COMMENT ON COLUMN MAP.PRO_NUM  IS '상품번호';
COMMENT ON COLUMN MAP.PRO_NAME  IS '상품이름';
COMMENT ON COLUMN MAP.PRO_ADDRESS  IS '상품주소';
COMMENT ON COLUMN MAP.PRO_PHONE  IS '전화번호';

INSERT INTO MAP VALUES(1, '스터디룸', '서울 강남구 테헤란로 14', '010-0000-0000');
INSERT INTO MAP VALUES(2, '2스터디룸', '서울 강북구', '010-0000-0000');
INSERT INTO MAP VALUES(3, '33스터디룸', '서울 성동구', '010-0000-0000');
UPDATE MAP SET PRO_ADDRESS = '서울 강남구 테헤란로 15', PRO_PHONE = '02-123-1243' WHERE PRO_NUM = 1;
DELETE FROM MAP WHERE PRO_NUM = 3;
SELECT * FROM MAP;


CREATE TABLE PRODUCT (
	PRO_NUM	NUMBER		NOT NULL,
	PRO_POST	VARCHAR2(4000)		NULL,
	PRO_INFORMATION	VARCHAR2(1000)		NULL,
	PRO_NOTICE	VARCHAR2(4000)		NULL,
	PRO_REFUND	VARCHAR2(800)		NULL,
	PRO_PRICE	NUMBER		NULL,
	PRO_ZIPCODE	VARCHAR2(10)		NULL
);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_MAP_TO_PRODUCT_1 FOREIGN KEY (
	PRO_NUM
)
REFERENCES MAP (
	PRO_NUM
);
COMMENT ON COLUMN PRODUCT.PRO_NUM  IS '상품번호';
--COMMENT ON COLUMN PRODUCT.MEM_ID  IS '아이디';
--COMMENT ON COLUMN PRODUCT.MEM_AUTHORITY  IS '권한구분';
COMMENT ON COLUMN PRODUCT.PRO_POST  IS '상품소개';
COMMENT ON COLUMN PRODUCT.PRO_INFORMATION  IS '시설안내';
COMMENT ON COLUMN PRODUCT.PRO_NOTICE  IS '유의사항';
COMMENT ON COLUMN PRODUCT.PRO_REFUND  IS '환불정책';
COMMENT ON COLUMN PRODUCT.PRO_PRICE  IS '가격';
COMMENT ON COLUMN PRODUCT.PRO_ZIPCODE  IS '우편번호';

INSERT INTO PRODUCT VALUES(1, '넓고 좋습니다.', '쓰레기는 쓰레기통에', '분리수거 철저히', '주문취소', 15000, '12345');
INSERT INTO PRODUCT VALUES(2, '감성감성', '쓰레기는 쓰레기통에', '분리수거 철저히', '주문취소', 25000, '12345');
INSERT INTO PRODUCT VALUES(3, '역세권', '쓰레기는 쓰레기통에', '분리수거 철저히', '주문취소', 30000, '12345');
UPDATE PRODUCT SET PRO_POST = 'ㅁㅇㅁㄴㅇㄴㄹ' WHERE PRO_NUM = 3;
DELETE FROM PRODUCT WHERE PRO_NUM = 3;
SELECT * FROM PRODUCT;



CREATE TABLE PRODUCTFILE (
	PRO_NUM	NUMBER		NOT NULL,
	PRO_PIC_ORIGINAL	VARCHAR2(100)		NULL,
	PRO_PIC_RENAME	VARCHAR2(100)		NULL
);
ALTER TABLE PRODUCTFILE ADD CONSTRAINT FK_MAP_TO_PRODUCTFILE_1 FOREIGN KEY (
	PRO_NUM
)
REFERENCES MAP (
	PRO_NUM
);
COMMENT ON COLUMN PRODUCTFILE.PRO_NUM  IS '상품번호';
COMMENT ON COLUMN PRODUCTFILE.PRO_PIC_ORIGINAL  IS '상품사진';
COMMENT ON COLUMN PRODUCTFILE.PRO_PIC_RENAME  IS '상품사진사본';

INSERT INTO PRODUCTFILE VALUES(1, '1231.jpg', '230312_1231.jpg');
INSERT INTO PRODUCTFILE VALUES(1, 'asdad.jpg', '230312_adad.jpg');
INSERT INTO PRODUCTFILE VALUES(1, '13242.jpg', '230312_12313.jpg');
--UPDATE PRODUCTFILE SET PRO_POST = 'ㅁㅇㅁㄴㅇㄴㄹ' WHERE PRO_NUM = 3;
DELETE FROM PRODUCTFILE WHERE PRO_NUM = 1;

SELECT * FROM PRODUCTFILE;
DESC PRODUCTFILE;

SELECT * FROM MAP
LEFT OUTER JOIN PRODUCT
USING (PRO_NUM)
LEFT OUTER JOIN PRODUCTFILE
USING (PRO_NUM);







CREATE TABLE NOTICE (
	NOTI_NUM	NUMBER		NOT NULL,
	MEM_ID	VARCHAR2(20)		NOT NULL,
	NOTI_IDX	VARCHAR2(10)		NULL,
	NOTI_TITLE	VARCHAR2(30)		NULL,
	NOTI_CONTENT	VARCHAR2(4000)		NULL,
	NOTI_DATE	DATE	DEFAULT SYSDATE	NULL,
	ORIGINAL_FILENAME	VARCHAR2(100)		NULL,
	RENAME_FILENAME	VARCHAR2(100)		NULL
);
ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	NOTI_NUM
);
ALTER TABLE NOTICE ADD CONSTRAINT FK_MEMBER_TO_NOTICE_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);
COMMENT ON COLUMN NOTICE.NOTI_NUM  IS '글번호';
COMMENT ON COLUMN NOTICE.MEM_ID  IS '아이디';
COMMENT ON COLUMN NOTICE.NOTI_IDX  IS '분류';
COMMENT ON COLUMN NOTICE.NOTI_TITLE  IS '제목';
COMMENT ON COLUMN NOTICE.NOTI_CONTENT  IS '내용';
COMMENT ON COLUMN NOTICE.NOTI_DATE  IS '날짜';
COMMENT ON COLUMN NOTICE.ORIGINAL_FILENAME  IS '파일';
COMMENT ON COLUMN NOTICE.RENAME_FILENAME  IS '파일사본';

INSERT INTO NOTICE VALUES(1, 'test','공지', '제목', '공지내용', '230326', 'andlad.jpg', 'kdlas_andlad.jpg');
INSERT INTO NOTICE VALUES(2, 'test','이벤트', '제목', '공지내용', '230330', 'andlad.jpg', 'kdlas_andlad.jpg');
INSERT INTO NOTICE VALUES(3, 'test','복구', '제목', '공지내용', '230426', 'andlad.jpg', 'kdlas_andlad.jpg');
UPDATE NOTICE SET NOTI_CONTENT = '내용수정합니다' WHERE NOTI_NUM = 3;
DELETE FROM NOTICE WHERE NOTI_NUM = 1;

SELECT * FROM NOTICE;
DESC NOTICE;

CREATE TABLE BOOK (
	BOOK_NUM	VARCHAR2(30)		NOT NULL,
	MEM_ID	VARCHAR2(20)		NOT NULL,
	PRO_NUM	NUMBER		NOT NULL,
	PRO_NAME	VARCHAR2(50)		NOT NULL,
	BOOK_DATE	DATE		NOT NULL,
	BOOK_STAYTIME	VARCHAR2(50)		NOT NULL,
	BOOK_PERSON	NUMBER		NOT NULL,
	PRO_PHONE	VARCHAR2(20)		NULL,
	PRO_PRICE	NUMBER		NOT NULL
);
ALTER TABLE BOOK ADD CONSTRAINT PK_BOOK PRIMARY KEY (
	BOOK_NUM
);
ALTER TABLE BOOK ADD CONSTRAINT FK_MEMBER_TO_BOOK_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);

ALTER TABLE BOOK ADD CONSTRAINT FK_MAP_TO_BOOK_1 FOREIGN KEY (
	PRO_NUM
)
REFERENCES MAP (
	PRO_NUM
);
COMMENT ON COLUMN BOOK.BOOK_NUM  IS '예약번호';
COMMENT ON COLUMN BOOK.MEM_ID  IS '아이디';
COMMENT ON COLUMN BOOK.PRO_NUM  IS '상품번호';
COMMENT ON COLUMN BOOK.PRO_NAME  IS '상품이름';
COMMENT ON COLUMN BOOK.BOOK_DATE  IS '예약날짜';
COMMENT ON COLUMN BOOK.BOOK_STAYTIME  IS '이용시간';
COMMENT ON COLUMN BOOK.BOOK_PERSON  IS '예약인원';
COMMENT ON COLUMN BOOK.PRO_PHONE  IS '상품전화번호';
COMMENT ON COLUMN BOOK.PRO_PRICE  IS '상품가격';

INSERT INTO BOOK VALUES('sadnl12312', 'test', 1, '스터디룸', '230323', '9', 3, '010-0000-0000', 45000);
INSERT INTO BOOK VALUES('wken23i2', '2test', 3, '3스터디룸', '230326', '8', 3, '010-0000-0000', 45000);
INSERT INTO BOOK VALUES('23undlfn', '3test', 2, '2스터디룸', '230323', '9', 3, '010-0000-0000', 45000);
UPDATE BOOK SET BOOK_DATE = '230329' WHERE BOOK_NUM = '23undlfn';
DELETE FROM BOOK WHERE BOOK_NUM = '23undlfn';

SELECT * FROM BOOK;
DESC BOOK;

CREATE TABLE PAY (
	PAY_NUM	VARCHAR2(30)		NOT NULL,
	BOOK_NUM	VARCHAR2(30)		NOT NULL,
	BOOK_DATE	DATE		NULL,
	PAY_DATE	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	PAY_PRICE	NUMBER		NOT NULL,
	PRO_NAME	VARCHAR2(50)		NOT NULL,
	MEM_NAME	VARCHAR2(20)		NOT NULL,
	MEM_EMAIL	VARCHAR2(30)		NOT NULL,
	PRO_PHONE	VARCHAR2(20)		NULL
);
ALTER TABLE PAY ADD CONSTRAINT PK_PAY PRIMARY KEY (
	PAY_NUM
);
ALTER TABLE PAY ADD CONSTRAINT FK_BOOK_TO_PAY_1 FOREIGN KEY (
	BOOK_NUM
)
REFERENCES BOOK (
	BOOK_NUM
);
COMMENT ON COLUMN PAY.PAY_NUM  IS '주문번호';
COMMENT ON COLUMN PAY.BOOK_NUM  IS '예약번호';
COMMENT ON COLUMN PAY.BOOK_DATE  IS '예약날짜';
COMMENT ON COLUMN PAY.PAY_DATE  IS '결제시간';
COMMENT ON COLUMN PAY.PAY_PRICE  IS '가격';
COMMENT ON COLUMN PAY.PRO_NAME  IS '상품이름';
COMMENT ON COLUMN PAY.MEM_NAME  IS '구매자이름';
COMMENT ON COLUMN PAY.MEM_EMAIL  IS '구매자이메일';
COMMENT ON COLUMN PAY.PRO_PHONE  IS '상품전화번호';

INSERT INTO PAY VALUES('1sdnfj1u12', '23undlfn','230323', '230330', 45000, '2스터디룸', '3테스트', 'test@test.com', '010-0000-0000');
INSERT INTO PAY VALUES('sdnfoq', 'wken23i2','230325', '230330', 45000, '3스터디룸', '3테스트', 'test@test.com', '010-0000-0000');
INSERT INTO PAY VALUES('1kens', 'sadnl12312','230326', '230330', 45000, '스터디룸', '3테스트', 'test@test.com', '010-0000-0000');
--UPDATE PAY SET MEM_EMAIL = '2test@test.com' WHERE PAY_NUM = '1kens';
DELETE FROM PAY WHERE PAY_NUM = '1kens';
SELECT * FROM PAY;
DESC PAY;

CREATE TABLE REVIEW (
	PAY_NUM	VARCHAR2(30)		NOT NULL,
	PRO_NAME	VARCHAR2(100)		NULL,
	REV_CONT	VARCHAR2(1000)		NOT NULL,
	REV_DATE	TIMESTAMP		NULL,
	MEM_AUTHORITY	VARCHAR2(30)		NULL,
	HOST_REPLY	VARCHAR2(1000)		NULL
);
ALTER TABLE REVIEW ADD CONSTRAINT PK_REVIEW PRIMARY KEY (
	PAY_NUM
);
ALTER TABLE REVIEW ADD CONSTRAINT FK_PAY_TO_REVIEW_1 FOREIGN KEY (
	PAY_NUM
)
REFERENCES PAY (
	PAY_NUM
);
COMMENT ON COLUMN REVIEW.PAY_NUM  IS '주문번호';
COMMENT ON COLUMN REVIEW.PRO_NAME  IS '상품이름';
COMMENT ON COLUMN REVIEW.REV_CONT  IS '리뷰내용';
COMMENT ON COLUMN REVIEW.REV_DATE  IS '리뷰작성시간';
COMMENT ON COLUMN REVIEW.MEM_AUTHORITY  IS '호스트ID';
COMMENT ON COLUMN REVIEW.HOST_REPLY  IS '호스트답글';

INSERT INTO REVIEW VALUES('1sdnfj1u12', '2스터디룸', '좋아요~', '230330', 2, '감사합니다.');
INSERT INTO REVIEW VALUES('sdnfoq', '3스터디룸', '좋아요~', '230330', 2, '감사합니다.');
INSERT INTO REVIEW VALUES('1kens', '스터디룸', '좋아요~', '230330', 2, '감사합니다.');
UPDATE REVIEW SET REV_CONT = '짱!' WHERE PAY_NUM = '1kens';
DELETE FROM REVIEW WHERE PAY_NUM = '1kens';
SELECT * FROM REVIEW;
DESC REVIEW;

 



CREATE TABLE QNA (
	PRO_NUM	NUMBER		NOT NULL,
	PRO_NAME	VARCHAR2(100)		NULL,
	MEM_ID	VARCHAR2(20)		NOT NULL,
	MEM_QA	VARCHAR2(1000)		NULL,
	MEM_AUTHORITY	VARCHAR2(30)		NULL,
	HOST_QA	VARCHAR2(1000)		NULL,
	QNA_DATE	TIMESTAMP		NULL
);
ALTER TABLE QNA ADD CONSTRAINT FK_MAP_TO_QNA_1 FOREIGN KEY (
	PRO_NUM
)
REFERENCES MAP (
	PRO_NUM
);

ALTER TABLE QNA ADD CONSTRAINT FK_MEMBER_TO_QNA_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);
COMMENT ON COLUMN QNA.PRO_NUM  IS '상품번호';
COMMENT ON COLUMN QNA.PRO_NAME  IS '상품이름';
COMMENT ON COLUMN QNA.MEM_ID  IS '아이디';
COMMENT ON COLUMN QNA.MEM_QA  IS '사용자문의글';
COMMENT ON COLUMN QNA.MEM_AUTHORITY  IS '호스트ID';
COMMENT ON COLUMN QNA.HOST_QA  IS '호스트답글';
COMMENT ON COLUMN QNA.QNA_DATE  IS 'QNA작성시간';

INSERT INTO QNA VALUES(1, '스터디룸', 'test', '사용시간 궁금해요', 2, '9시~21시까지', '230331');
INSERT INTO QNA VALUES(2, '2스터디룸', 'test', '사용시간 궁금해요', 2, '9시~21시까지', '230331');
INSERT INTO QNA VALUES(3, '3스터디룸', 'test', '사용시간 궁금해요', 2, '9시~21시까지', '230331');
UPDATE QNA SET MEM_QA = '짱!' WHERE PRO_NUM = 3;
DELETE FROM QNA WHERE PRO_NUM = 3;
SELECT * FROM QNA;
DESC QNA;

 



CREATE TABLE SNS (
	SNS_TOKEN	VARCHAR2(50)		NOT NULL,
	MEM_ID	VARCHAR2(20)		NOT NULL,
	SNS_NAME	VARCHAR2(45)		NULL,
	SNS_CONNECT_DATE	DATE		NOT NULL,
	SNS_TYPE	VARCHAR2(50)		NOT NULL,
	MEM_AUTHORITY	NUMBER		NULL
);
ALTER TABLE SNS ADD CONSTRAINT PK_SNS PRIMARY KEY (
	SNS_TOKEN
);
ALTER TABLE SNS ADD CONSTRAINT FK_MEMBER_TO_SNS_1 FOREIGN KEY (
	MEM_ID
)
REFERENCES MEMBER (
	MEM_ID
);
COMMENT ON COLUMN SNS.SNS_TOKEN  IS '토큰';
COMMENT ON COLUMN SNS.MEM_ID  IS '아이디';
COMMENT ON COLUMN SNS.SNS_NAME  IS 'SNS별명';
COMMENT ON COLUMN SNS.SNS_CONNECT_DATE  IS 'SNS연동날짜';
COMMENT ON COLUMN SNS.SNS_TYPE  IS 'SNS종류';
COMMENT ON COLUMN SNS.MEM_AUTHORITY  IS '계정권한';



CREATE TABLE CHATTROOM (
	CHA_ROOM_NUM	NUMBER		NULL,
	ROOM_CONTENT	VARCHAR2(500)		NULL,
	ROOM_LASTDATE	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL
);
ALTER TABLE CHATTROOM ADD CONSTRAINT PK_CHATTROOM PRIMARY KEY (
	CHA_ROOM_NUM
);
COMMENT ON COLUMN CHATTROOM.CHA_ROOM_NUM  IS '방번호';
COMMENT ON COLUMN CHATTROOM.ROOM_CONTENT  IS '내용';
COMMENT ON COLUMN CHATTROOM.ROOM_LASTDATE  IS '마지막작성시간';

SELECT * FROM CHATTROOM;
DESC CHATTROOM;


CREATE TABLE MEMBER_ROOM (
	MEM_ID	VARCHAR2(20)		NULL,
	ROOM_NO	NUMBER		NULL
);
ALTER TABLE MEMBER_ROOM ADD CONSTRAINT PK_MEMBER_ROOM PRIMARY KEY (
	MEM_ID,
	ROOM_NO
);
ALTER TABLE MEMBER_ROOM ADD CONSTRAINT FK_CHATTROOM_TO_MEMBER_ROOM_1 FOREIGN KEY (
	ROOM_NO
)
REFERENCES CHATTROOM (
	CHA_ROOM_NUM
);
COMMENT ON COLUMN MEMBER_ROOM.MEM_ID  IS '아이디';
COMMENT ON COLUMN MEMBER_ROOM.ROOM_NO  IS '방번호';

CREATE TABLE CHAT (
	CHA_TIME	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	MEM_ID	VARCHAR2(20)		NOT NULL,
	ROOM_NO	NUMBER		NOT NULL,
	CHA_CONTENT	VARCHAR2(500)		NOT NULL
);
ALTER TABLE CHAT ADD CONSTRAINT FK_MEMBER_ROOM_TO_CHAT FOREIGN KEY (
	MEM_ID, ROOM_NO
)
REFERENCES MEMBER_ROOM (
	MEM_ID, ROOM_NO
);

COMMENT ON COLUMN CHAT.CHA_TIME  IS '작성시간';
COMMENT ON COLUMN CHAT.MEM_ID  IS '아이디';
COMMENT ON COLUMN CHAT.ROOM_NO  IS '방번호';
COMMENT ON COLUMN CHAT.CHA_CONTENT  IS '내용';



